type Query {
  ping: String!
  Categories: [Categories!]!
  Products: [Products!]!
  comprobationUser(token: String!): Boolean!
  Sessiones: [Users!]!
}

type Categories {
  category_id: ID!
  category_name: String!
}

type Products {
  product_id: ID!
  product_name: String!
  old_price: Float
  price: Float!
  description: String!
  brand: String!
  quantity: Int!
  user: Users!
  category_products: [Categories!]!
}

type Users {
  user_id: ID!
  uid: String!
  photo: String!
  email: String!
  lastToken: String!
  birthday: DateTime!
  random_code: Int
  userProducts: [Products!]!
  phone_id: Phone
  wish_id: ListWish
  shoppingCardt_id: ShoppingCart
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Phone {
  phone_id: ID
  country_code: String!
  phone_number: String
}

type ListWish {
  wish_id: ID!
  user_id: Users!
  wish_products_id: [Products!]!
}

type ShoppingCart {
  shoppingCardt_id: ID!
}

type Mutation {
  createproduct(myval: ProductsInput!): Products!
  createSessions(myval: UsersInput!): Users!
}

input ProductsInput {
  product_name: String!
  old_price: Float!
  price: Float!
  description: String
  brand: String!
  quantity: Float!
  category_products: [CategoriesInput!]!
}

input CategoriesInput {
  id: Float
  category_name: String!
}

input UsersInput {
  user_id: Float
  uid: String!
  email: String!
  birthday: DateTime!
  photo: String
  random_code: Float
}